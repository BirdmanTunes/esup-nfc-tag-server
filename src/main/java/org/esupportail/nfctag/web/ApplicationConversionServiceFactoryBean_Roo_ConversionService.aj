// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.esupportail.nfctag.web;

import org.esupportail.nfctag.domain.Application;
import org.esupportail.nfctag.domain.Device;
import org.esupportail.nfctag.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Application, String> ApplicationConversionServiceFactoryBean.getApplicationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.esupportail.nfctag.domain.Application, java.lang.String>() {
            public String convert(Application application) {
                return new StringBuilder().append(application.getName()).append(' ').append(application.getNfcConfig()).append(' ').append(application.getAppliExt()).append(' ').append(application.getTagIdCheck()).toString();
            }
        };
    }
    
    public Converter<Long, Application> ApplicationConversionServiceFactoryBean.getIdToApplicationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.esupportail.nfctag.domain.Application>() {
            public org.esupportail.nfctag.domain.Application convert(java.lang.Long id) {
                return Application.findApplication(id);
            }
        };
    }
    
    public Converter<String, Application> ApplicationConversionServiceFactoryBean.getStringToApplicationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.esupportail.nfctag.domain.Application>() {
            public org.esupportail.nfctag.domain.Application convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Application.class);
            }
        };
    }
    
    public Converter<Device, String> ApplicationConversionServiceFactoryBean.getDeviceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.esupportail.nfctag.domain.Device, java.lang.String>() {
            public String convert(Device device) {
                return new StringBuilder().append(device.getNumeroId()).append(' ').append(device.getEppnInit()).append(' ').append(device.getImei()).append(' ').append(device.getMacAddress()).toString();
            }
        };
    }
    
    public Converter<Long, Device> ApplicationConversionServiceFactoryBean.getIdToDeviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.esupportail.nfctag.domain.Device>() {
            public org.esupportail.nfctag.domain.Device convert(java.lang.Long id) {
                return Device.findDevice(id);
            }
        };
    }
    
    public Converter<String, Device> ApplicationConversionServiceFactoryBean.getStringToDeviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.esupportail.nfctag.domain.Device>() {
            public org.esupportail.nfctag.domain.Device convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Device.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getApplicationToStringConverter());
        registry.addConverter(getIdToApplicationConverter());
        registry.addConverter(getStringToApplicationConverter());
        registry.addConverter(getDeviceToStringConverter());
        registry.addConverter(getIdToDeviceConverter());
        registry.addConverter(getStringToDeviceConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
